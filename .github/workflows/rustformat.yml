name: Auto Format Rust Code

on: [pull_request]

permissions:
  contents: write

jobs:
  auto-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}  # Ensure we check out the PR branch

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Format code
        run: cargo fmt

      # - name: Commit changes
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .
      #     git diff --quiet && git diff --staged --quiet || git commit -m "Auto-format Rust code"
      #     git commit --amend --no-edit  # Amend last commit without changing the message
      #     git push origin HEAD:${{ github.event.pull_request.head.ref }}
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Rebase onto latest main/dev
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}  # Fetch latest base branch
          git rebase origin/${{ github.event.pull_request.base.ref }}  # Rebase PR onto latest base

      - name: Commit changes (ensure only one commit)
        run: |
          git add .

          # If there are changes, amend the last commit instead of creating a new one
          git diff --quiet && git diff --staged --quiet || git commit --amend --no-edit

      - name: Push changes (force-with-lease to avoid PR closure)
        run: |
          git push --force-with-lease origin HEAD:${{ github.event.pull_request.head.ref }}

